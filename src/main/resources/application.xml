<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jaxrs="http://cxf.apache.org/jaxrs" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation=" 
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://cxf.apache.org/jaxrs 
    http://cxf.apache.org/schemas/jaxrs.xsd">

	<!-- 引入jdbc配置文件 使用PropertyPlaceholderConfigurer可以在XML配置文件中加入外部属性文件，用${key}替换指定的properties文件中的值 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:db.properties</value>
			</list>
		</property>
	</bean>


	<!-- 配置数据源 -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName">
			<value>${driver_sys}</value>
		</property>
		<property name="url">
			<value>${url_sys}</value>
		</property>
		<property name="username">
			<value>${username_sys}</value>
		</property>
		<property name="password">
			<value>${password_sys}</value>
		</property>
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:mapper/sys/*.xml" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.gydz.*.mapper" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>


	<!-- 自动扫描注解的bean -->
	<context:component-scan base-package="com.gydz.**.service" />

	<bean id="myRealm" class="com.gydz.realm.MyRealm">
		<property name="credentialsMatcher">
			<bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
				<property name="hashAlgorithmName" value="MD5"></property> <!-- 加密算法的名称 -->
				<property name="hashIterations" value="1024"></property> <!-- 配置加密的次数 -->
			</bean>
		</property>
		<property name="authorizationCachingEnabled" value="false"/>
	</bean>

	<!--安全管理 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="myRealm"></property>
	</bean>
	
	<!--shiro 过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- Shiro过滤器的核心安全接口，这个属性是必须的 -->
		<property name="securityManager" ref="securityManager" />
		<!--身份认证失败，则跳转到登录页面的配置 -->
		<property name="loginUrl" value="/login.jsp" />
		<!--权限认证失败，则跳转到指定页面 -->
		<property name="unauthorizedUrl" value="/unauth.jsp" />
		<!-- Shiro连接约束配置，即过滤链的定义 -->
		<property name="filterChainDefinitions">
			<value>
				/login.jsp=anon
				/user/login = anon
				/user/logout = logout
				/index.jsp=authc
				/css/**=anon
				/images/**=anon
				/js/**=anon
				/fonts/**=anon
				/template/**=anon
				/share/**=anon
				/ws/**=anon
				/**=authc
			</value>
		</property>
	</bean>
	
</beans>